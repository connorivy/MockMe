<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>net6.0</TargetFramework>
    <ImplicitUsings>enable</ImplicitUsings>
    <Nullable>enable</Nullable>
    <LangVersion>latest</LangVersion>
    <IsPackable>true</IsPackable>
    <!--<CopyLocalLockFileAssemblies>true</CopyLocalLockFileAssemblies>-->
    <!--<TargetsForTfmSpecificBuildOutput>$(TargetsForTfmSpecificBuildOutput);CopyProjectReferencesToPackage</TargetsForTfmSpecificBuildOutput>-->
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Lib.Harmony" Version="2.3.3" />
    <PackageReference Include="Mono.Cecil" Version="0.11.6" PrivateAssets="all" />
    <PackageReference Include="Microsoft.Build.Framework" Version="17.12.6" PrivateAssets="all" />
    <PackageReference Include="Microsoft.Build.Utilities.Core" Version="17.12.6" PrivateAssets="all" />
    <!--<PackageReference Include="Tenekon.MSBuild.Packaging.ProjectBuildInPackage" Version="2.0.0">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers</IncludeAssets>
    </PackageReference>-->
  </ItemGroup>

  <ItemGroup>
    <Folder Include="Asserters\" />
  </ItemGroup>

  <!--<Target Name="PushLocal" AfterTargets="Pack" Condition="Exists('$(NugetFeedPath)')">
    <Exec Command="echo After Pack: $(PackageOutputPath)$(MSBuildProjectName).$(Version).nupkg $(NugetFeedPath)" />
    <Exec Command="echo nuget package root: $(NugetPackageRoot)" />
    <Exec Command="dotnet nuget push $(PackageOutputPath)$(MSBuildProjectName).$(Version).nupkg -s $(NugetFeedPath)" />
  </Target>-->

  <!--<Target Name="ClearExisting" AfterTargets="Pack">
    <RemoveDir Directories="$(NugetPackageRoot)/$(PackageId.ToLower())/$(Version)" />
  </Target>-->

  <!--<Target Name="CopyProjectReferencesToPackage" DependsOnTargets="BuildOnlySettings;ResolveReferences">
    <ItemGroup>
      <BuildOutputInPackage Include="@(ReferenceCopyLocalPaths->WithMetadataValue('ReferenceSourceTarget', 'ProjectReference')->WithMetadataValue('PrivateAssets', 'All'))" />
    </ItemGroup>
  </Target>-->

  <ItemGroup>
    <ProjectReference Include="..\MockMe.Abstractions\MockMe.Abstractions.csproj" PrivateAssets="all" />
    <ProjectReference Include="..\MockMe.Generator\MockMe.Generator.csproj" PrivateAssets="all" />
    <ProjectReference Include="..\MockMe.PostBuild\MockMe.PostBuild.csproj" />    
  </ItemGroup>

  <PropertyGroup>
    <CecilPath></CecilPath>
    <AbstractionsPath>$(MSBuildProjectDirectory)\..\MockMe.Abstractions\$(OutputPath)\$(AssemblyName).Abstractions.dll</AbstractionsPath>
    <GeneratorFolder>$(MSBuildProjectDirectory)\..\MockMe.Generator\$(OutputPath)</GeneratorFolder>
  </PropertyGroup>

  <Target Name="ClearExisting" BeforeTargets="Pack">
    <Exec Command="echo targetName : $(TargetName)" />
  </Target>

  <!--<ItemGroup Condition="'$(TargetName)' == 'Pack'">
    <None Update="Build\MockMe.targets" Pack="true" PackagePath="build\MockMe.targets" />
    <None Include="$(MSBuildProjectDirectory)\..\MockMe.Abstractions\$(OutputPath)\$(AssemblyName).Abstractions.dll" Pack="true" PackagePath="analyzers/dotnet/cs" Visible="false" />
    <None Include="$(MSBuildProjectDirectory)\..\MockMe.Abstractions\$(OutputPath)\$(AssemblyName).Abstractions.dll" Pack="true" PackagePath="lib/netstandard2.0" Visible="true" />
    <None Include="$(NugetPackageRoot)\mono.cecil\0.11.6\lib\netstandard2.0\Mono.Cecil.dll" Pack="true" PackagePath="lib/netstandard2.0" Visible="true" />
    <None Update="$(OutputPath)\Mono.Cecil.Rocks.dll" Pack="true" PackagePath="lib/netstandard2.0" Visible="false" />
    <None Include="$(MSBuildProjectDirectory)\..\MockMe.Generator\$(OutputPath)MockMe.Generator.dll" Pack="true" PackagePath="analyzers/dotnet/cs" Visible="false" />
  </ItemGroup>-->

</Project>
